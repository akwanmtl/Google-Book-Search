{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/SearchForm/index.js","components/BookCard/index.js","components/BookList/index.js","components/Message/index.js","utils/API.js","components/BookContainer/index.js","pages/Search.js","pages/Saved.js","pages/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isActive","setisActive","react_default","a","createElement","className","role","aria-label","react_router_dom","to","concat","aria-expanded","data-target","onClick","aria-hidden","id","Jumbotron","SearchForm","_ref","handleChange","value","handleSubmit","onSubmit","type","placeholder","onChange","name","BookCard","book","button","handleClick","authors","toString","replaceAll","title","src","image","alt","href","link","target","rel","index_es","icon","faEye","googleID","faStar","faTrash","description","BookList","bookList","length","map","components_BookCard","key","Message","message","loading","class","max","API","getBooks","axios","get","deleteBook","delete","saveBook","bookData","post","googleSearch","query","BookContainer","children","Search","state","searchedBooks","search","findBooks","_this","then","res","data","totalItems","setState","items","item","volumeInfo","imageLinks","thumbnail","infoLink","catch","err","console","log","filter","event","_event$target","defineProperty","preventDefault","trim","components_SearchForm","this","components_BookContainer","components_Message","components_BookList","Component","Saved","savedBooks","getSavedBooks","NoMatch","App","components_Navbar","components_Jumbotron","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_1","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.41bd4e91.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar () {\n\n  const [isActive, setisActive] = React.useState(false);\n\n  return (\n    <div>\n      <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item\" to=\"/\">\n            Google Books Search\n          </Link>\n\n          <div role=\"button\" className={`navbar-burger burger ${isActive ? 'is-active' : ''}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navOptions\" onClick={() => {\n            setisActive(!isActive)\n          }}>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </div>\n        </div>\n\n        <div id=\"navOptions\" className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n          <div className=\"navbar-end\">\n            <Link className=\"navbar-item\" to=\"/\">\n              Search\n            </Link>\n            <Link className=\"navbar-item\" to=\"/saved\">\n              Saved\n            </Link>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport './jumbotron.css';\n\nfunction Jumbotron () {\n  return (\n    <div className=\"container is-max-desktop\">\n      <section className=\"hero is-medium block_article img-background\">\n      <div className=\"hero-body\">\n        <div className=\"banner-text\">\n          <p className=\"title\">\n            Google Books Search\n          </p>\n          <p className=\"subtitle\">\n            Using a \"React\"-ive to find your books!\n          </p>\n        </div>\n      </div>\n    </section>\n    </div>\n  )\n}\n\nexport default Jumbotron;","import React from \"react\";\n\nfunction SearchForm({handleChange, value, handleSubmit}) {\n  \n  return (\n    <form onSubmit={handleSubmit}>\n    <div className=\"field has-addons\">\n      <div className=\"control is-expanded\">\n        <input \n          className=\"input\" \n          type=\"text\" \n          placeholder=\"Harry Potter\"\n          onChange={handleChange}\n          name=\"search\"\n          value={value}\n          />\n      </div>\n      <div className=\"control\">\n        <button className=\"button is-primary\" type=\"submit\">\n          Search\n        </button>\n      </div>\n    </div>\n    </form>\n  )\n}\n\nexport default SearchForm;","import React from \"react\";\nimport './bookcard.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction BookCard({book, button, handleClick}) {\n  let authors = book.authors.toString().replaceAll(',',', ');\n\n  return (\n    <div className=\"book-card\">\n\n      <div className=\"columns content\">\n        <div className=\"column book-body\">\n          <h2><i>{book.title}</i></h2>\n          <h6><i>Written by {authors}</i></h6>\n\n          <div className=\"columns is-gapless\">\n            \n            <div className=\"column is-one-fifth book-cover has-text-centered\">\n              <img src={book.image} alt={book.title}/>\n              <br/>\n              <a className=\"button is-primary button-test\" href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faEye} className=\"icon\"/>\n                View\n              </a>\n              <button \n                className=\"button is-link button-test\" \n                onClick={() => handleClick(book.googleID)}>\n                  {button == \"Save\" ? \n                    <FontAwesomeIcon icon={faStar} className=\"icon\"/>:\n                    <FontAwesomeIcon icon={faTrash} className=\"icon\"/> \n                  }\n                  {button}\n              </button>\n            </div>\n            \n            <div className=\"column\">\n              <p className=\"has-text-justified\">{book.description}</p>\n            </div>\n\n          </div>\n          \n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default BookCard;","import React from \"react\";\nimport BookCard from '../BookCard'\n\nfunction BookList({bookList, button, handleClick}) {\n\n  return (\n    <div>\n      { ( bookList.length!==0 ) ?\n        bookList.map((book) => (\n          <BookCard book={book} key={book.googleID} button={button} handleClick={handleClick}/>\n        )) :\n        <div>No books found</div>\n      }\n    </div>\n  )\n}\n\nexport default BookList;","import React from 'react';\nimport './message.css'\n\nfunction Message ({message, loading}) {\n  return (\n    <div className=\"message-banner\">\n      { loading ? \n        <progress class=\"progress is-large is-link\" max=\"100\">100%</progress> :\n        <div>{message}</div>\n      }\n    </div>\n  )\n}\n\nexport default Message;","import axios from \"axios\";\n\nconst googleURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n\n  googleSearch: function(query){\n    return axios.get(googleURL+query);\n  }\n};\n","import React from 'react';\nimport './bookcontainer.css'\n\nfunction BookContainer ({children}) {\n  return (\n    <div className=\"container is-max-desktop book-container\">\n      {children}\n    </div>\n  )\n}\n\nexport default BookContainer;","import React, { Component } from 'react';\nimport SearchForm from '../components/SearchForm';\nimport BookList from '../components/BookList';\nimport Message from '../components/Message';\nimport API from '../utils/API'\nimport BookContainer from '../components/BookContainer';\n\nclass Search extends Component {\n  \n  state = {\n    searchedBooks: [],\n    search: \"\",\n    loading: false,\n    message: \"Search For A Book For Your Next Reading Adventure!\"\n  };\n\n  findBooks = () => {\n    API.googleSearch(this.state.search)\n      .then(res => {\n        if(res.data.totalItems!==0){\n          this.setState({\n            searchedBooks: res.data.items.map(item => {\n              const book = item.volumeInfo;\n              return {\n                title: book.title,\n                authors: book.authors || \"N/A\",\n                description: book.description || \"\",\n                image: (book.imageLinks) ? book.imageLinks.thumbnail : \"https://dummyimage.com/150x200/5c666e/ced0f2&text=No+Image\" ,\n                link: book.infoLink,\n                googleID: item.id\n              }\n            })\n          })\n        }\n        else{\n          this.setState({message:\"No Book Found\"})\n        }\n        this.setState({loading:false})\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleClick = (id) => {\n    \n    console.log(\"adding\")\n    const book = this.state.searchedBooks.filter(book => book.googleID === id);\n    API.saveBook(book[0])\n      .then(res =>{\n        console.log(res.data)\n        this.setState({\n          searchedBooks : this.state.searchedBooks.filter(book => book.googleID !== id)\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target;\n    this.setState({[name]:value})\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    \n    if(this.state.search.trim()!== \"\") {\n      this.setState({loading:true, searchedBooks: []})\n      this.findBooks();\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"container is-max-desktop\">\n        <SearchForm handleChange={this.handleChange} value={this.state.search} handleSubmit={this.handleSubmit}/>  \n        <BookContainer>\n          { this.state.searchedBooks.length === 0 ?\n            <Message loading={this.state.loading} message={this.state.message}/> :\n            <BookList bookList={this.state.searchedBooks} button=\"Save\" handleClick={this.handleClick}/>\n          }\n        </BookContainer>\n      </div>\n    )\n  }\n  \n}\n\nexport default Search;","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport BookList from '../components/BookList'\nimport Message from '../components/Message'\nimport BookContainer from '../components/BookContainer';\n\nclass Saved extends Component {\n  \n  state = {\n    savedBooks: [],\n    loading:true\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n    \n  }\n\n  // Loads all books and sets them to books\n  getSavedBooks = () => {\n    API.getBooks()\n      .then(res => {\n        this.setState({\n          savedBooks: res.data,\n          loading: false\n        })\n      })\n      .catch(err => console.log(err));\n    \n  };\n\n\n  handleClick = (id) => {\n    \n    console.log(\"removing\")\n    API.deleteBook(id)\n      .then(res =>{\n        console.log(res.data)\n        this.setState({\n          savedBooks : this.state.savedBooks.filter(book => book.googleID !== id)\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"container is-max-desktop\">\n        <BookContainer>\n          { this.state.savedBooks.length === 0 ? \n            <Message message=\"No Saved Books\" loading={this.state.loading}/> :\n            <BookList bookList={this.state.savedBooks} button=\"Remove\" handleClick={this.handleClick}/>\n          }\n        </BookContainer>\n        \n      </div>\n    )\n  }\n  \n}\n\nexport default Saved;","import React from 'react';\n\nfunction NoMatch () {\n  return (\n    <div className=\"container is-max-desktop\">\n      Error 404 - Page not found\n    </div>\n  )\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport './App.sass';\n\nimport Navbar from './components/Navbar';\nimport Jumbotron from './components/Jumbotron';\n\nimport Search from './pages/Search';\nimport Saved from './pages/Saved';\nimport NoMatch from './pages/NoMatch';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n            <Navbar />\n            <Jumbotron />\n            <Switch>\n              <Route exact path=\"/\" component={ Search } />\n              <Route exact path=\"/saved\" component={ Saved } />\n              <Route component={ NoMatch } />           \n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}